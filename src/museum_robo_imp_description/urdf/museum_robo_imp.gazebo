<?xml version="1.0" ?>
<robot name="museum_robo_imp" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="battery_frame_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="battery_frame_2">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="battery_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_1_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_2_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_4_1">
  <material>${body_color}</material>
  <mu1>0.4</mu1>
  <mu2>0.4</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_3_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_4_1">
  <material>${body_color}</material>
  <mu1>0.4</mu1>
  <mu2>0.4</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_1">
  <material>${body_color}</material>
  <mu1>0.4</mu1>
  <mu2>0.4</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_2_1">
  <material>${body_color}</material>
  <mu1>0.4</mu1>
  <mu2>0.4</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_3_1">
  <material>${body_color}</material>
  <mu1>2</mu1>
  <mu2>2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="cam_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>


<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>10</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>fl</leftFrontJoint>
    <rightFrontJoint>fr</rightFrontJoint>
    <leftRearJoint>rl</leftRearJoint>
    <rightRearJoint>rr</rightRearJoint>
    <wheelSeparation>0.45</wheelSeparation>
    <wheelDiameter>0.087</wheelDiameter>
    <robotBaseFrame>base_link</robotBaseFrame>
    <torque>5</torque>
    <topicName>cmd_vel</topicName>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <broadcastTF>true</broadcastTF>
  </plugin>
</gazebo>

<gazebo reference="camera_link">  
    <sensor type="depth" name="camera">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.40</near>
          <far>20.0</far>
        </clip>
      </camera>
      <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>50</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>camera_link</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.45</pointCloudCutoff>
        <pointCloudCutoffMax>16</pointCloudCutoffMax>
      </plugin>
    </sensor>
  </gazebo>

<gazebo reference="camera_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>camera_link</frameName>
      </plugin>
    </sensor>
  </gazebo>



</robot>
